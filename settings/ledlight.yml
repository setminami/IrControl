# RGB keys presents as grid ref docs/img/remotecontroller.png in this file.
# like, (0, 0) points ON Key, ....(1,3) points R Key
IRSEND_CMD: irsend # Donot mind that have to specify the path to command or not.
KEYCODE: # can select fix name ledlight as rgb ledlight
  - name: ledlight
    # describe registered name in [remote].lircd.conf strictly as remote controller grid.
    row_max: 6
    col_max: 4
    '0_0': on
    '0_1': off
    '0_2': down
    '0_3': up
    '1_0': white
    '1_1': b0
    '1_3': r0
    '2_1': b1
    '2_3': r1
    '3_1': b2
    '4_1': b3
    '5_1': b4
    # "n/a" means no regitered to lircd or no use key
    # Or for use keep readability, when the controller keys are not layouted NxN square.

# When you wanna search selectable TIMEZONE, run python -c "import pytz;[print(tz) for tz in pytz.all_timezones]"
TIMEZONE: 'Asia/Tokyo'
UPDATE_TIME: 00:05

SUNLIGHT_STATUS_API:
  location: # the sample is Tokyo
    latitude: 35.658581
    longitude: 139.745433
  cache_update_freq_min: 30

IFTTT:
  # Make you own IFTTT Maker webhook.
  # And the hookname must be matched with TIMESHIFTS.xxx.operations.command name.
  # Donot edit path,  first {} and second {} are special positional arg
  path: https://maker.ifttt.com/trigger/{}/with/key/{}
  # IMPORTANT: Please describe your correct webhook key
  # case 1. do "export $IFTTT_KEY=YOURKEY" somewhere, YOURKEY is described on your IFTTT webhook (documentations)menu,
  # write above on your env file (e.g., ~/.bashrc)
  # or
  # case 2. write your key directly here on your local "~/.ledlight.yml". like crontab's @reboot /path/to/RGB_control.py -c ~/.ledlight.yml
  key: ${IFTTT_KEY}

LINEAR: False # (no implementation) If True, time settings are auto calculated linearly between TIMESHIFTS.
# ref. https://api-sunrise-sunset.org/ , each names of operation must be matched with WeatherInfo.properties (e.g., sunrise, sunset)
TIMESHIFTS:
  #
  midnight: # If you want to adjust set like below
    schedule:
      time: astronomical_tw.begin
      relative_time_sec: -7200 # -2h
    operations:
      # yaml in some condition, interpret on/off as boolean
      - command: 'off'
        remote: ledlight
        repeat: 3

  astronomical_twilight:
    schedule:
      time: astronomical_tw.begin
      relative_time_sec: 0
    operations:
      - command: 'on'
        remote: ledlight
        repeat: 3
      - command: b0
        remote: ledlight
        repeat: 3

  nautical_twilight:
    schedule:
      time: nautical_tw.begin
      relative_time_sec: 0
    operations:
      - command: 'on'
        remote: ledlight
        repeat: 3
      - command: b1
        remote: ledlight
        repeat: 3

  civil_twilight:
    schedule:
      time: civil_tw.begin
      relative_time_sec: 0
    operations:
      - command: 'on'
        remote: ledlight
        repeat: 3
      - command: up
        remote: ledlight
        repeat: 16
      - command: b2
        remote: ledlight
        repeat: 3

  sunrise:
    schedule:
      time: sunrise
      relative_time_sec: 0
    operations:
      - command: 'on'
        remote: ledlight
        repeat: 3
      - command: up # up & down has 8 stages. 16 ensure minmax
        remote: ledlight
        repeat: 16
      - command: b3
        remote: ledlight
        repeat: 3
      - remote: IFTTT
        command: weaklight_on
        repeat: 1 # because IFTTT is on TCP

  solar_noon:
    schedule:
      time: solar_noon
      relative_time_sec: -3600
    operations:
      - command: white
        remote: ledlight
        repeat: 3
      - remote: IFTTT
        command: noonlight_on
        repeat: 1 # because IFTTT is on TCP

  evening:
    schedule:
      time: sunset
      relative_time_sec: -5400 # -1.5h
    operations:
      - command: b3
        remote: ledlight
        repeat: 3
      - command: down
        remote: ledlight
        repeat: 16
      - remote: IFTTT
        command: noonlight_off
        repeat: 1 # because IFTTT is on TCP

  sunset:
    schedule:
      time: sunset
      relative_time_sec: 0
    operations:
      - command: b4
        remote: ledlight
        repeat: 3
      - remote: IFTTT
        command: weaklight_off
        repeat: 1 # because IFTTT is on TCP

  twilight:
    schedule:
      time: civil_tw.end
      relative_time_sec: 0
    operations:
      - command: b1
        remote: ledlight
        repeat: 3

  moon:
    schedule:
      time: astronomical_tw.end
      relative_time_sec: 0
    operations:
      - command: b0
        remote: ledlight
        repeat: 3
